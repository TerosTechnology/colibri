name: Testing
permissions:
  contents: write
on:
  push:
    branches:
      - main
      - dev
  pull_request:
  # schedule:
  #   - cron:  '0 0 * * *'
env:
  ACTION_CHECKOUT: actions/checkout@v3
  ACTION_UPLOAD_ARTIFACT: actions/upload-artifact@v3
  ACTION_DOWNLOAD_ARTIFACT: actions/download-artifact@v3

jobs:
  #############################################################################
  # Lint
  #############################################################################
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Install modules
        run: npm install
      - name: Run ESLint
        run: npm run-script lint

  ##############################################################################
  # Unit test
  ##############################################################################
  unit-test:
    strategy:
      fail-fast: false
      matrix:
        os:
          - ubuntu-18.04
          - ubuntu-20.04
          - ubuntu-22.04
          - macos-latest
          - windows-latest
    needs: [lint]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Install modules
        run: npm install
      - name: Compile
        run: npm run compile
      - name: Python depencencies
        run: pip install vunit_hdl
      - name: Run unit tests
        run: npm test
      - name: Save HTML report artifact
        uses: actions/upload-artifact@v3
        if: always()
        with:
          name: test-report-html-${{ matrix.os }}
          path: mochawesome-report

  ##############################################################################
  # Documentation
  ##############################################################################
  generate-api-doc:
    if: always()
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Install modules
        run: npm install
      - name: Generate doc
        run: |
          npm run-script generate-doc
      - name: Save documentation
        uses: actions/upload-artifact@v3
        with:
          name: api-doc
          path: out_doc_api

  ##############################################################################
  # Publish documentation
  ##############################################################################
  create-doc:
    if: always()
    runs-on: ubuntu-20.04
    needs: [unit-test, generate-api-doc]
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Install modules
        run: npm install
      # ubuntu 18.04
      - name: Download artifacts Ubuntu 18.04
        uses: actions/download-artifact@v3
        with:
          name: test-report-html-ubuntu-18.04
          path: test-report-html-ubuntu-18.04
      # ubuntu 20.04
      - name: Download artifacts Ubuntu 20.04
        uses: actions/download-artifact@v3
        with:
          name: test-report-html-ubuntu-20.04
          path: test-report-html-ubuntu-20.04
      # ubuntu 22.04
      - name: Download artifacts Ubuntu 22.04
        uses: actions/download-artifact@v3
        with:
          name: test-report-html-ubuntu-22.04
          path: test-report-html-ubuntu-22.04
      # macos-latest
      - name: Download artifacts macos-latest
        uses: actions/download-artifact@v3
        with:
          name: test-report-html-macos-latest
          path: test-report-html-macos-latest
      # windows-latest
      - name: Download artifacts windows-latest
        uses: actions/download-artifact@v3
        with:
          name: test-report-html-windows-latest
          path: test-report-html-windows-latest
      # api-doc
      - name: Download artifacts api-doc
        uses: actions/download-artifact@v3
        with:
          name: api-doc
          path: api-doc
      - name: Rename directories
        run: |
          mv test-report-html-ubuntu-18.04 docs
          mv test-report-html-ubuntu-20.04 docs
          mv test-report-html-ubuntu-22.04 docs
          mv test-report-html-macos-latest docs
          mv test-report-html-windows-latest docs
          mv api-doc docs
          mv tests/command/linter/expected/report_html.html docs/example_report_linter_html.html
          mv tests/command/linter/expected/report_detailed.html docs/example_report_linter_html_detailed.html
          sed -i 's/commit_hash/'$GITHUB_SHA'/' docs/index.html
      - name: Save HTML documentation
        uses: actions/upload-artifact@v3
        with:
          name: doc-web
          path: docs

  publish-doc:
    if: always() && github.ref == 'refs/heads/main'
    runs-on: ubuntu-20.04
    needs: [create-doc]
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Download doc artifact
        uses: actions/download-artifact@v3
        with:
          name: doc-web
          path: doc-web
      - name: "ğŸš€ Deploy"
        if: github.ref == 'refs/heads/main'
        uses: JamesIves/github-pages-deploy-action@4.1.4
        with:
          branch: gh-pages
          folder: doc-web

  ##############################################################################
  # Command line pack
  ##############################################################################
  command-line-teroshdl-pack:
    needs: [unit-test]
    name: Pack TerosHDL
    runs-on: ubuntu-20.04
    container: ubuntu:20.04
    steps:
      - run: apt update
      - run: apt install -y nsis p7zip-full p7zip-rar git curl tar xz-utils apt-utils
      - run: git config --global --add safe.directory /__w/colibri2/colibri2
      - uses: actions/setup-node@v2
        with:
          node-version: "16"
      - name: Checkout
        uses: actions/checkout@v3
      - name: Install modules
        run: npm install
      - name: Compile
        run: npm run compile
      - run: npm install oclif
      - run: npx oclif pack tarballs -r . --parallel
      - name: Save pack
        uses: actions/upload-artifact@v3
        with:
          name: teroshdl-pack
          path: dist

  ##############################################################################
  # Publish package
  ##############################################################################
  publish-release:
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    needs: [command-line-teroshdl-pack]
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Set node enviroment
        uses: actions/setup-node@v3
        with:
          node-version: 12
      - name: npm install
        run: |
          npm install
      - name: Compile
        run: |
          npm run compile
      - name: Publish NPM package
        id: publish
        uses: JS-DevTools/npm-publish@v1
        with:
          token: ${{ secrets.NPM_TOKEN }}
          check-version: true
      - name: Package not published
        if: steps.publish.outputs.type == '' || steps.publish.outputs.type == 'none'
        run: |
          echo "Error, version not changed."
          exit 1
      - name: Tar for release
        run: |
          cd ..
          tar -cvzf teroshdl2-${{ steps.publish.outputs.version }}.tar.gz colibri2
          mv teroshdl2-${{ steps.publish.outputs.version }}.tar.gz colibri2
          cd colibri2

      - name: Download artifacts pack
        uses: actions/download-artifact@v3
        with:
          name: teroshdl-pack
          path: teroshdl-pack

      - name: Create release
        uses: "marvinpinto/action-automatic-releases@latest"
        with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          automatic_release_tag: ${{ steps.publish.outputs.version }}
          prerelease: false
          files: |
            ./teroshdl-pack/*.tar.gz
      - name: Released
        run: |
          echo "Version changed: ${{ steps.publish.outputs.old-version }} => ${{ steps.publish.outputs.version }}"
